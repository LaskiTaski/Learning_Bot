from aiogram import types

Video = types.InlineKeyboardButton('–í–∏–¥–µ–æ –£—Ä–æ–∫–∏üìº', callback_data='Video')
HomeWork = types.InlineKeyboardButton('–†–∞–∑–±–æ—Ä –î–æ–º–∞—à–µ–∫üè†', callback_data='HomeWork')
Project = types.InlineKeyboardButton('–ü—Ä–æ–µ–∫—Ç—ãüß†', callback_data='Project')
Book = types.InlineKeyboardButton('–¢–µ–∫—Å—Ç–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ãüìö', callback_data='Book')
Learn = types.InlineKeyboardButton('–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ü´°', callback_data='Learn')

Module1 = types.InlineKeyboardButton('Module1ü§®', callback_data='Module1')
Module2 = types.InlineKeyboardButton('Module2ü´† ', callback_data='Module2')
Module3 = types.InlineKeyboardButton('Module3ü§Ø', callback_data='Module3')
Module4 = types.InlineKeyboardButton('Module4ü´£', callback_data='Module4')

AllMenu = types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—éüîô', callback_data='Menu')

def gen_learn_button(callback: types.CallbackQuery) -> [list]:
    """
    :param callback: –í—ã–±—Ä–∞–Ω–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è
    :return: –°–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫
    """

    kb = []
    kb_info = {
        'Level 1': 'Learn', 'Level 2': 'lvl2', 'Level 3': 'lvl3',
        'OOP': 'lvl5', 'LeetCode': 'lvl6', 'Codewars': 'lvl7',
        'Bioinformatics Institute': 'lvl4'
    }

    for name, call in kb_info.items():
        if call == callback:
            kb.append(types.InlineKeyboardButton(f"{name}üî∑", callback_data=f"{call}"))
        else:
            kb.append(types.InlineKeyboardButton(f"{name}üî∂", callback_data=f"{call}"))
    return kb
def gen_learn_info() -> [dict]:
    """
    :param callback: –ö–ª—é—á –∫ —Å–ª–æ–≤–∞—Ä—é
    :return: –°–ø–∏—Å–æ–∫ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    """
    info = {
        'Learn': ['–î–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö', 'https://telegra.ph/Codewars-03-17'],
        'lvl2': ['–î–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö', 'https://telegra.ph/Dlya-prodvinutyh-03-17'],
        'lvl3': ['–ò–Ω–¥–∏-–∫—É—Ä—Å', 'https://telegra.ph/Indi-kurs-03-17-2'],
        'lvl4': ['Bioinformatics Institute', 'https://telegra.ph/Bioinformatics-Institute-03-17'],
        'lvl5': ['–í—Å—ë –ø—Ä–æ –û–û–ü', 'https://telegra.ph/OOP-03-17'],
        'lvl6': ['LeetCode', 'https://telegra.ph/LeetCode-03-17'],
        'lvl7': ['Codewars', 'https://telegra.ph/Codewars-03-17-2']
    }
    return info


def gen_book_button(callback: types.CallbackQuery) -> [list]:
    """
    :param callback: –í—ã–±—Ä–∞–Ω–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è
    :return: –°–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫
    """

    kb = []
    kb_info = {
        '–ß–∏—Å–ª–∞': 'Book', '–°—Ç—Ä–æ–∫–∏': 'str', '–°–ø–∏—Å–∫–∏': 'list',
        '–°–ª–æ–≤–∞—Ä–∏': 'dict', 'Turtle': 'turtle',
        '–û–û–ü': 'OOP', '–ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤': 'open'
    }

    for name, call in kb_info.items():
        if call == callback:
            kb.append(types.InlineKeyboardButton(f"{name}üî∑", callback_data=f"{call}"))
        else:
            kb.append(types.InlineKeyboardButton(f"{name}üî∂", callback_data=f"{call}"))
    return kb
def gen_book_info() -> [dict]:
    """
    :param callback: –ö–ª—é—á –∫ —Å–ª–æ–≤–∞—Ä—é
    :return: –°–ø–∏—Å–æ–∫ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    """
    info = {
        'Book': ['–ß–∏—Å–ª–∞', 'https://telegra.ph/CHislovye-metodyfunkciioperacii-02-05'],
        'str': ['–°—Ç—Ä–æ–∫–∏', 'https://telegra.ph/Strokovye-metodyfunkciiprimery-02-05'],
        'list': ['–°–ø–∏—Å–∫–∏', 'https://telegra.ph/Metodyfunkciiprimery-spiskov-02-05'],
        'dict': ['–°–ª–æ–≤–∞—Ä–∏', 'https://telegra.ph/Primery-i-metody-slovarej-02-05'],
        'open': ['–ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤', 'https://telegra.ph/CHtenie-fajlov-02-05'],
        'turtle': ['Turtle', 'https://telegra.ph/Modul-Turtle-02-05'],
        'OOP': ['–û–û–ü', 'https://telegra.ph/OOP-02-05'],
    }
    return info



